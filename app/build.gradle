apply plugin: 'com.android.application'
apply plugin: 'android-rocket-launcher'

// get signing properties
Properties keystoreProperties = new Properties()
if (project.rootProject.file('local.properties').exists()) {
    Properties localProperties = new Properties()
    localProperties.load(project.rootProject.file('local.properties').newDataInputStream())
    if (localProperties.getProperty('signingPropertiesFile') != null
            && new File(localProperties.getProperty('signingPropertiesFile')).exists()) {
        keystoreProperties.load(
                new FileInputStream(file(localProperties.getProperty('signingPropertiesFile'))))
    }
}
if (keystoreProperties.isEmpty()) {
    keystoreProperties.setProperty('storeFile', 'empty.keystore')
    keystoreProperties.setProperty('storePassword', 'storePassword')
    keystoreProperties.setProperty('keyAlias', 'keyAlias')
    keystoreProperties.setProperty('keyPassword', 'keyPassword')
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "org.walkersguide.android"
        resConfigs "en", "de"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 15
        versionName '1.0.1'
        // personal data
        buildConfigField 'String', 'CONTACT_EMAIL', '"info@walkersguide.org"'
        buildConfigField 'String', 'CONTACT_WEBSITE', '"https://www.walkersguide.org"'
        // internal
        // database
        buildConfigField 'String', 'DATABASE_NAME', '"walkersguide.db"'
        buildConfigField 'Integer', 'DATABASE_VERSION', '9'
        // server
        buildConfigField 'String', 'SERVER_URL', '"https://api.walkersguide.org/"'
        buildConfigField 'String', 'SERVER_URL_DEV', '"https://api.test.walkersguide.org/"'
        buildConfigField 'Integer', 'MINIMAL_API_VERSION', '1'
        // set .apk name
        setProperty("archivesBaseName", "${archivesBaseName}-$versionName")
    }

    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
        }
    }

    lintOptions {
        disable "StaticFieldLeak", "InflateParams", "GoogleAppIndexingWarning",
                "ButtonStyle", "UseSparseArrays", "UseCompoundDrawables",
                "DefaultLocale", "AllowBackup", "IconLauncherShape", "Autofill", "GradleCompatible"
    }
}

dependencies {
    // android support library
    implementation 'com.android.support:design:28.0.0'
    // google java helper library
    implementation 'com.google.guava:guava:27.0.1-android'
    // logging
    implementation 'com.jakewharton.timber:timber:4.7.1'
}
