apply plugin: 'com.android.application'
apply plugin: 'android-rocket-launcher'

// get signing properties
Properties keystoreProperties = new Properties()
if (project.rootProject.file('local.properties').exists()) {
    Properties localProperties = new Properties()
    localProperties.load(project.rootProject.file('local.properties').newDataInputStream())
    if (localProperties.getProperty('signingPropertiesFile') != null
            && new File(localProperties.getProperty('signingPropertiesFile')).exists()) {
        keystoreProperties.load(
                new FileInputStream(file(localProperties.getProperty('signingPropertiesFile'))))
    }
}
if (keystoreProperties.isEmpty()) {
    keystoreProperties.setProperty('storeFile', 'empty.keystore')
    keystoreProperties.setProperty('storePassword', 'storePassword')
    keystoreProperties.setProperty('keyAlias', 'keyAlias')
    keystoreProperties.setProperty('keyPassword', 'keyPassword')
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "org.walkersguide.android"
        resConfigs "en", "de"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 17
        versionName '1.2.0'
        // personal data
        buildConfigField 'String', 'CONTACT_EMAIL', '"info@walkersguide.org"'
        buildConfigField 'String', 'CONTACT_WEBSITE', '"https://www.walkersguide.org"'
        // internal
        // database
        buildConfigField 'String', 'DATABASE_NAME', '"walkersguide.db"'
        buildConfigField 'Integer', 'DATABASE_VERSION', '10'
        // server
        buildConfigField 'String', 'SERVER_URL', '"https://api.walkersguide.org/"'
        buildConfigField 'String', 'SERVER_URL_DEV', '"https://api.test.walkersguide.org/"'
        buildConfigField 'int[]', 'SUPPORTED_API_VERSION_LIST', '{3, 4}'
        // set .apk name
        setProperty("archivesBaseName", "${archivesBaseName}-$versionName")
    }

    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
        }
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    lintOptions {
        disable "InflateParams", "GoogleAppIndexingWarning",
                "ButtonStyle", "UseSparseArrays", "UseCompoundDrawables",
                "DefaultLocale", "IconLauncherShape", "Autofill"
    }
}

dependencies {
    // androidX
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core:1.3.2'
    implementation 'androidx.drawerlayout:drawerlayout:1.1.1'
    implementation 'androidx.fragment:fragment:1.2.5'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    implementation 'androidx.viewpager:viewpager:1.0.0'
    // material design
    implementation 'com.google.android.material:material:1.2.1'
    // google helpers
    implementation 'com.google.guava:guava:28.2-android'
    implementation 'com.google.code.gson:gson:2.8.6'
    // logging
    implementation 'com.jakewharton.timber:timber:4.7.1'
    // public transport enabler
    implementation 'de.schildbach.pte:public-transport-enabler-2021-08-07@jar'
    implementation 'com.squareup.okhttp3:okhttp:3.12.12'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.12'
    implementation 'org.slf4j:slf4j-api:1.7.30'
}

repositories {
    // include local libs directory
    flatDir {
        dirs 'libs'
    }
}
